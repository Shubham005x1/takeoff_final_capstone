// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/CreateGrocery": {
            "post": {
                "description": "Create a new grocery item with the provided data and image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new grocery item",
                "operationId": "create-grocery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JSON data for the grocery item",
                        "name": "json-data",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file for the grocery item",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File uploaded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid JSON payload or missing required fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/DeleteGrocery": {
            "delete": {
                "description": "Delete a grocery item by providing its ID",
                "summary": "Delete a grocery item",
                "operationId": "delete-grocery",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the grocery item to delete",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/UpdateGrocery": {
            "patch": {
                "description": "Update a grocery item by providing its ID and new data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a grocery item",
                "operationId": "update-grocery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the grocery item to update",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JSON data containing updated information",
                        "name": "json-data",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file for the grocery item",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID or missing JSON data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found: Grocery item not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ViewAllGroceries": {
            "get": {
                "description": "Retrieve a list of groceries with optional filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "View all groceries",
                "operationId": "view-all-groceries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page token for cursor-based pagination",
                        "name": "pageToken",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by product name",
                        "name": "productname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Price filter format: 'gt:100', 'eq:50', 'lt:200'",
                        "name": "priceFilter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/GetGroceryByID": {
            "get": {
                "description": "Retrieve a grocery item by providing its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a grocery item by ID",
                "operationId": "get-grocery-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the grocery item to retrieve",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found: Grocery item not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/bulkUploadGroceryItems": {
            "post": {
                "description": "Uploads multiple grocery items from a CSV or JSON file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Bulk upload grocery items",
                "operationId": "bulk-upload-grocery-items",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV or JSON file containing grocery items",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File URL sent successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request: Unsupported file type. Only CSV or JSON files are allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Grocery API",
	Description:      "API for managing groceries",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
